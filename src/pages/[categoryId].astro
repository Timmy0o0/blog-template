---
import CategoryHeader from "@components/CategoryHeader.astro";
import SubCategoryHeader from "@components/SubCategoryHeader.astro";
import PostCard from "@components/widgets/PostCard.astro";
import { SITE_TITLE, USER_SITE } from "@config";
import type { Metadata } from "@interface/data";
import BaseLayout from "@layouts/BaseLayout.astro";
import {
  getAllCategories,
  getPostsGroupedBySubCategory,
} from "@utils/blog-utils";
import {
  generateBreadcrumbJsonLd,
  generateCategoryBreadcrumbs,
} from "@utils/breadcrumb-utils";
import {
  createCollectionPageSchema,
  createJsonLdSchema,
} from "@utils/json-ld-utils";

export async function getStaticPaths() {
  const categories = await getAllCategories();
  return categories.map((category) => ({
    params: { categoryId: category.id },
    props: {
      category: category,
    },
  }));
}

const { categoryId } = Astro.params;
const { category } = Astro.props;

// Get posts grouped by subcategory
const postsGroupedBySubCategory =
  await getPostsGroupedBySubCategory(categoryId);

// Calculate total post count
const totalPostCount = postsGroupedBySubCategory.reduce(
  (total, group) => total + group.posts.length,
  0,
);

const metadata: Metadata = {
  title: `${category.data.title} - ${SITE_TITLE}`,
  description: category.data.description,
  image: category.data.image?.src,
  type: "website",
};

// Get all posts in this category for JSON-LD
const allPostsInCategory = postsGroupedBySubCategory.flatMap(
  (group) => group.posts,
);

// Generate breadcrumb JSON-LD
const breadcrumbs = generateCategoryBreadcrumbs(
  categoryId,
  category.data.title,
);
const breadcrumbJsonLd = generateBreadcrumbJsonLd(breadcrumbs);

// Create collection page schema
const collectionPageSchema = createCollectionPageSchema(
  `${USER_SITE}/${categoryId}`,
  category.data.title,
  category.data.description,
  `${USER_SITE}${category.data.image.src}`,
  SITE_TITLE,
  USER_SITE,
  totalPostCount,
  allPostsInCategory,
);

// Create unified JSON-LD schema using @graph structure
const jsonLdSchema = createJsonLdSchema([
  collectionPageSchema,
  breadcrumbJsonLd,
]);
---

<BaseLayout metadata={metadata} jsonLdSchema={jsonLdSchema}>
  <CategoryHeader
    categoryId={categoryId}
    categoryName={category.data.title}
    image={category.data.image}
    postCount={totalPostCount}
  />

  <div class="divider"></div>

  <!-- Posts by SubCategory -->
  {
    postsGroupedBySubCategory.length > 0 ? (
      <div class="space-y-16 py-12">
        {postsGroupedBySubCategory.map((group) => (
          <div>
            {/* SubCategory Header */}
            <SubCategoryHeader
              subCategory={group.subCategory}
              postCount={group.posts.length}
            />

            {/* Posts grid for this subcategory */}
            {group.posts.length > 0 ? (
              <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
                {group.posts.map((post) => (
                  <PostCard post={post} />
                ))}
              </div>
            ) : (
              <div class="py-6 text-center">
                <div class="text-base-content/60 text-sm">
                  No posts found in this subcategory yet.
                </div>
              </div>
            )}
          </div>
        ))}
      </div>
    ) : (
      <div class="py-12 text-center">
        <div class="text-base-content/60 text-lg">
          No posts found in this category yet.
        </div>
        <a href="/" class="btn btn-primary mt-4">
          Back to Home
        </a>
      </div>
    )
  }
</BaseLayout>
